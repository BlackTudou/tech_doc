非对称加密算法——RSA
======================

=============
几个数学概念
=============

质数（素数）
-------------

除了能表示为它自己和1的乘积以外，不能表示为任何其它两个整数的乘积。

例如，15＝3＊5，所以15不是素数；又如，12＝6＊2＝4＊3，所以12也不是素数。

互质数（互素数）
-------------------

公约数只有1的两个数，叫做互质数

模指数运算
---------------

模运算 m mod n，让m去被n整除，只取所得的余数作为结果，就叫做模运算。

例如，10 mod 3=1；26 mod 6=2；28 mod 2 =0等等。

模指数运算就是先做指数运算，取其结果再做模运算。如(5^3) mod 7 = (125 mod 7) = 6。

===============================
对称加密算法和非对称加密算法
===============================

对称加密算法，比如AES算法，在发送端（加密）和接收端（解密）使用相同的一份秘钥，称为共享秘钥。

非对称加密算法，比如RSA算法，在加密使用公钥，而在解密时使用私钥。

================
RSA加密算法简介
================

RSA加密算法是最常用的非对称加密算法，由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）于1977年一起提出，RSA就是他们三人姓氏开头字母拼在一起组成的。

非对称加密算法的特点就是加密秘钥和解密秘钥不同，秘钥分为公钥和私钥，用私钥加密的明文，只能用公钥解密；用公钥加密的明文，只能用私钥解密。

RSA的安全基于大数分解的难度。其公钥和私钥是一对大素数（100到200位十进制数或更大）的函数。从一个公钥和密文恢复出明文的难度，等价于分解两个大素数之积（这是公认的数学难题）。

=============
RSA算法描述
=============

RSA算法是一种常用的非对称加密算法。

RSA算法主要包括三个过程：

 - 生成秘钥对
 - 使用公钥加密明文
 - 使用私钥解密密文

RSA算法关键参数
-------------------

RSA算法关键参数:

 - n 模数，位长度为1024比特或者2048比特
 - e 公钥指数，一般为3，7或者65537
 - d 私钥指数

公钥
---------

公钥KU=（e，n）：

模值：n=两素数p和q的乘积（p和q必须保密）

公钥指数：e= 与(p-1)*(q-1)互质的一个数

例如：

.. code-block::

    取素数： p=3，q=11
    模值： n=p*q=3*11=33
    公钥指数：e=3 满足和(p-1)*(q-1)=2*10=20互质。
    公钥KU = (3, 33)

私钥
-------

私钥KR=（d，n）：

模值：n=两素数p和q的乘积（p和q必须保密）

私钥指数：d= 满足(de) mod ((p-1)(q-1)) = 1 这个表达式的d就行

例如：

.. code-block::

    私钥指数：d=7 满足（e*d） mod (p-1)*(q-1) =3×d mod 20 =1。

明文加密
----------------

假设需要加密的明文为字符串 “key”

首先，需要将明文信息数字化。假定明文unicode母编码表为按字母顺序排列数值，即：则得到分组后的key的明文信息为：11，05，25。

加密过程 C=M^e mod n （M为明文，C为密文）

例如：

.. code-block::

    用户加密密钥(3,33) 将数字化明文分组信息加密成密文。由C=M^e mod n得：
    M1 = C1^e mod n = 11^3 mod 33 = 11
    M2 = C2^e mod n = 5^3 mod 33 = 26
    M3 = C3^e mod n = 25^3 mod 33 = 16
    因此，得到相应的密文信息为：11，26，16。

密文解密
---------------

解密过程 M=C^d mod n （C为密文，M为明文，d为私钥指数，n为模数）

例如：

.. code-block::

    用户B收到密文，若将其解密，只需要计算M=C^d mod n，即：
    C1 = M1^d mod n = 11^7 mod 33 = 11
    C2 = M2^d mod n = 26^7 mod 33 = 5
    C3 = M3^d mod n = 16^7 mod 33 = 25

    用户B得到明文信息为：11，05，25。根据unicode编码表将其转换为英文，我们又得到了恢复后的原文“key”。


当然，实际运用要比这复杂得多，由于RSA算法的公钥私钥的长度（模长度）要到1024位甚至2048位才能保证安全，因此，p、q、e的选取、公钥私钥的生成，加密解密模指数运算都有一定的计算程序，需要仰仗计算机高速完成。

==============
RSA加速技术
==============

RSA算法在计算过程中存在较多的取模运算和幂运算，计算速度比对称加密算法要慢，所以不适合对大量数据进行加密和解密，在实际中常用于加密或解密小数据片段。

RSA公钥加密过程可使用短公开指数进行快速计算，而RSA私钥解密过程可使用中国剩余定理（CRT）进行加速执行。

====================
RSA填充方法
====================

RSA加密结果是确定的。当公钥确定的时候，一段明文总是会加密的到对应的密文，这样未免存在安全隐患。

实际使用RSA算法中需要包含填充方案，在计算之前会对明文进行随机注入，这样在公钥和明文相同的情况下，也不会生成相同的秘文。

常用的RSA填充方案有两种：

 - RSAES-OAEP（推荐使用）
 - RSAES-PKCS1V1_5（较早、不推荐使用）。